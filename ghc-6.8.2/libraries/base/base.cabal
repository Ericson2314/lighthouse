name:           base
version:        3.0.1.0
license:        BSD3
license-file:   LICENSE
maintainer:     libraries@haskell.org
synopsis:       Basic libraries
description:
    This package contains the Prelude and its support libraries,
    and a large collection of useful libraries ranging from data
    structures to parsing combinators and debugging utilities.
cabal-version:  >=1.2
build-type: Custom
extra-tmp-files:
                config.log config.status autom4te.cache
                include/HsBaseConfig.h


Library {
    -- This is actually something of a hack, as if we are using
    -- GHC and we don't have an rts package for some reason, we
    -- actually ought to fail.
    if impl(ghc) {
        build-depends: rts
        exposed-modules:
            Data.Generics,
            Data.Generics.Aliases,
            Data.Generics.Basics,
            Data.Generics.Instances,
            Data.Generics.Schemes,
            Data.Generics.Text,
            Data.Generics.Twins,
            Foreign.Concurrent,
            GHC.Arr,
            GHC.Base,
            GHC.Conc,
            GHC.ConsoleHandler,
            GHC.Enum,
            GHC.Environment,
            GHC.Err,
            GHC.Exception,
            GHC.Exts,
            GHC.Float,
            GHC.ForeignPtr,
            GHC.IOBase,
            GHC.Int,
            GHC.List,
            GHC.Num,
            GHC.PArr,
            GHC.Pack,
            GHC.Prim,
            GHC.PrimopWrappers,
            GHC.Ptr,
            GHC.Read,
            GHC.Real,
            GHC.ST,
            GHC.STRef,
            GHC.Show,
            GHC.Stable,
            GHC.Storable,
            GHC.TopHandler,
            GHC.Unicode,
            GHC.Weak,
            GHC.Word,
            System.Timeout
    }
    exposed-modules:
        Control.Applicative,
        Control.Arrow,
        Control.Concurrent,
        Control.Concurrent.Chan,
        Control.Concurrent.MVar,
        Control.Concurrent.QSem,
        Control.Concurrent.QSemN,
        Control.Concurrent.SampleVar,
        Control.Exception,
        Control.Monad,
        Control.Monad.Fix,
        Control.Monad.Instances,
        Control.Monad.ST,
        Control.Monad.ST.Lazy,
        Control.Monad.ST.Strict,
        Data.Bits,
        Data.Bool,
        Data.Char,
        Data.Complex,
        Data.Dynamic,
        Data.Either,
        Data.Eq,
        Data.Fixed,
        Data.Foldable
        Data.Function,
        Data.HashTable,
        Data.IORef,
        Data.Int,
        Data.Ix,
        Data.List,
        Data.Maybe,
        Data.Monoid,
        Data.Ord,
        Data.Ratio,
        Data.STRef,
        Data.STRef.Lazy,
        Data.STRef.Strict,
        Data.String,
        Data.Traversable
        Data.Tuple,
        Data.Typeable,
        Data.Unique,
        Data.Version,
        Data.Word,
        Debug.Trace,
        Foreign,
        Foreign.C,
        Foreign.C.Error,
        Foreign.C.String,
        Foreign.C.Types,
        Foreign.ForeignPtr,
        Foreign.Marshal,
        Foreign.Marshal.Alloc,
        Foreign.Marshal.Array,
        Foreign.Marshal.Error,
        Foreign.Marshal.Pool,
        Foreign.Marshal.Utils,
        Foreign.Ptr,
        Foreign.StablePtr,
        Foreign.Storable,
        Numeric,
        Prelude,
        System.Console.GetOpt,
        System.CPUTime,
        System.Environment,
        System.Exit,
        System.IO,
        System.IO.Error,
        System.IO.Unsafe,
        System.Info,
        System.Mem,
        System.Mem.StableName,
        System.Mem.Weak,
        System.Posix.Types,
        Text.ParserCombinators.ReadP,
        Text.ParserCombinators.ReadPrec,
        Text.Read,
        Text.Read.Lex,
        Text.Show,
        Text.Show.Functions
        Unsafe.Coerce
    c-sources:
        cbits/PrelIOUtils.c
        cbits/WCsubst.c
        cbits/Win32Utils.c
        cbits/consUtils.c
        cbits/dirUtils.c
        cbits/inputReady.c
        cbits/longlong.c
        cbits/selectUtils.c
    include-dirs: include
    includes:    HsBase.h
    install-includes:    HsBase.h HsBaseConfig.h WCsubst.h dirUtils.h consUtils.h Typeable.h
    if os(windows) {
        extra-libraries: wsock32, msvcrt, kernel32, user32, shell32
    }
    extensions:    CPP
    -- XXX is there an extension for using # in varids?
    -- We need to set the package name to base (without a version number)
    -- as it's magic.
    ghc-options: -fglasgow-exts -package-name base -Dhouse_HOST_OS
    nhc98-options: -H4M -K3M
}
